// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TokenAndRefresh.Infra;

#nullable disable

namespace TokenAndRefresh.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240330202907_ChangeKeyName")]
    partial class ChangeKeyName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TokenAndRefresh.Models.HistoryRefreshTokens", b =>
                {
                    b.Property<int>("IdHistoryRefreshToken")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHistoryRefreshToken"));

                    b.Property<DateTime?>("DateCreation")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateExpiration")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<bool?>("isActive")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("bit")
                        .HasComputedColumnSql("(case when [DateExpiration]<getdate() then CONVERT([bit],(0)) else CONVERT([bit],(1)) end)", false);

                    b.HasKey("IdHistoryRefreshToken")
                        .HasName("PK__History");

                    b.HasIndex("IdUser");

                    b.ToTable("HistorialRefreshToken", (string)null);
                });

            modelBuilder.Entity("TokenAndRefresh.Models.Users", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("KeyUser")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdUser")
                        .HasName("PK__User");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("TokenAndRefresh.Models.HistoryRefreshTokens", b =>
                {
                    b.HasOne("TokenAndRefresh.Models.Users", "IdUserNavigation")
                        .WithMany("HistoryRefreshTokens")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__History__IdUser");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("TokenAndRefresh.Models.Users", b =>
                {
                    b.Navigation("HistoryRefreshTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
